# Generated by Django 5.2.4 on 2025-07-12 05:55

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('service_type', models.CharField(choices=[('question_improvement', 'Question Improvement'), ('answer_feedback', 'Answer Feedback'), ('tag_suggestion', 'Tag Suggestion'), ('similar_questions', 'Similar Questions')], max_length=50)),
                ('input_text', models.TextField()),
                ('output_text', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('processing_time', models.FloatField(default=0.0)),
                ('tokens_used', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('confidence_level', models.IntegerField(default=50, help_text='How confident are you in this answer? (0-100)')),
                ('ai_feedback', models.TextField(blank=True)),
                ('ai_improved_content', models.TextField(blank=True)),
                ('ai_suggestions', models.JSONField(blank=True, default=list)),
                ('is_accepted', models.BooleanField(default=False)),
                ('mentor_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearningJournal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('question_asked', 'Question Asked'), ('answer_given', 'Answer Given'), ('answer_accepted', 'Answer Accepted'), ('mentor_verified', 'Mentor Verified'), ('community_joined', 'Community Joined'), ('confidence_improved', 'Confidence Improved')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('points_earned', models.IntegerField(default=0)),
                ('confidence_before', models.IntegerField(blank=True, null=True)),
                ('confidence_after', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('ai_improved_title', models.CharField(blank=True, max_length=200)),
                ('ai_improved_content', models.TextField(blank=True)),
                ('ai_suggested_tags', models.JSONField(blank=True, default=list)),
                ('ai_similar_questions', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(default=list)),
                ('is_featured', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=0)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zen_mode_enabled', models.BooleanField(default=False)),
                ('dark_mode_enabled', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('question_notifications', models.BooleanField(default=True)),
                ('answer_notifications', models.BooleanField(default=True)),
                ('mentor_notifications', models.BooleanField(default=True)),
                ('auto_confidence_prompt', models.BooleanField(default=True)),
                ('show_ai_suggestions', models.BooleanField(default=True)),
                ('track_learning_progress', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
